h1. Vim

Venho lendo que não dá para depender de IDEs há algum tempo. São as mesmas pessoas que afirmam que é possível ser mais produtivo com um editor de textos poderoso.
Então, aproveitando minha atual entrada no mundo Ruby e o fato do Akita, que é quem eu leio sobre Ruby e usa VIM, resolvi me inspirar na idéia de "versionar meu diretório ~/.vim usando o Git":http://addisu.taddese.com/blog/using-github-and-pathogen-for-your-vim-config-files.

Para modificar as configurações entre no Vim e digite:
<pre><code>:edit $MYVIMRC
</code></pre>

Para ver as modificações, sem reiniciar o Vim:
<pre><code>:source $MYVIMRC
</code></pre>

h2. Documentação

 * "Vim":http://vimdoc.sourceforge.net/htmldoc/usr_toc.html - sobre o editor Vim.
 * "Akita vimfiles, no Github":https://github.com/akitaonrails/vimfiles - O repositório do Akita com a configuração do vim dele.
 * "Atalhos Úteis":http://www.worldtimzone.com/res/vi.html.
 * "Melhor guia de consulta rápida":http://michael.peopleofhonoronly.com/vim
 * "Videos do Derek Wyatt":http://vimeo.com/user1690209/videos
 * "Dividindo as janelas":http://technotales.wordpress.com/2010/04/29/vim-splits-a-guide-to-doing-exactly-what-you-want/

h3. Dicionário de teclas
 * [Leader]: \

h2. Instalação

Além de baixar o projeto para o diretório .vim, é necessário baixar os submodulos. E, ainda, tem um passo adicional para o plugin command-t
<pre><code>cd ~
git clone https://github.com/acdesouza/vimfiles.git .vim
cd .vim/
git submodule update --init
echo "source ~/.vim/.vimrc" > ~/.vimrc
</code></pre>

Então, entre na pasta do Command-T e execute o make:
<pre><code>cd ~/.vim/bundle/command-t/ruby/command-t/
ruby extconf.rb
make
</code></pre>

h2. Dependências

h3. Linux - Ubuntu e Debian

No Ubuntu, é necessário instalar o Ruby. O pacote ruby-dev é necessário para o plugin Command-T.
<pre><code>sudo apt-get install ruby ruby-dev
</code></pre>

h3. MacOSX

Precisa do XCode, que vem com o CD de instalação do Mac.
A versão mais nova é o "XCode4, que dá para comprar e baixar pela App Store":http://itunes.apple.com/br/app/xcode/id422352214?mt=12, mas ainda não testei usar esta versão.
Já o MacVim, entre outros aplicativos, eu instalo pelo "Homebrew":http://mxcl.github.com/homebrew

h1. Modificações do VIM

As customizações feitas no meu .vimrc foram encontradas em http://jmcpherson.org/vimrc.html. Não estou usando todas, apenas as que me permitem definir o seguinte comportamento:

 * Sem compatibilidade com o VI;
 * Sem barra de ferramentas;
 * Exibir/Ocultar o número da linha na lateral esquerda do texto, com o keymap: [Leader] + ln, de (l)ine (n)umber;
 * Exibir/Ocultar a distância da linha atual, em linhas, na lateral esquerda do texto, com o keymap: [Leader] + lr, de (l)ine (r)elative;
 * Exibir a linha e coluna atual, na barra de status;
 * Usar codificação UTF-8;
 * Adicionar o shebang UTF-8 na primeira linha do arquivo com o keymap: Command + 1
 * (Des)Comentar a linha atual, ou as linhas selecionadas, com o keymap: Command + /
 * Identação automática, isto é, a identação da próxima linha é a mesma da linha atual;
 * Indentação inteligente, isto é, incrementa a indentação da linha seguinte a da criação de um bloco de código;
 * Tabulação, padrão, de 2 caracteres;
 * Substituir os caracteres de tabulação pelo de espaço;
 * Apagar os espaços sobrando no final das linhas;
 * Exibir chaves correspondentes, isto é, quando fechar uma chave, mostrar qual a chave que está sendo fechada;
 * Buscar enquanto digita, isto é, ao ir para o modo de comando e digitar /, tudo que for digitado depois será destacado na próxima parte do texto onde aparecer, como na busca do Firefox;
 * Fonte Menlo de tamanho 13;
 * Diretório de backup dentro do diretório .vim/, assim evito de espalhar os arquivos swp pelo sistema;
 * Impedir quebra de linha;
 * Configurar a linha de status para exibir: nome do arquivo [tipo de arquivo] coluna atual,linha atual/total de linhas percentual no arquivo%


h1. Bundled Plugins

 * "Pathogen":https://github.com/tpope/vim-pathogen - "Como instalar os plugins no VIM encapsulados em uma pasta.":http://gustavodutra.com/post/409/pathogenvim-uma-alternativa-para-quem-utiliza-plugins-em-repositorios-remotos.
 * "Command-T":http://git.wincent.com/command-t.git/blob_plain/HEAD:/README.txt - Plugin que emula a abertura de arquivos do TextMate usando Command-T. Este plugin busca pelos arquivos no diretório corrente no Vim. Para mudar de diretório, use o cd no modo de comando.
 ** Exibe, apenas, 20 arquivos na lista;
 ** Abre o buffer de busca sempre no topo, assim não perco o foco do primeiro item encontrado.
 ** Não busca nos diretórios:
 *** .git/
 *** vendor/
 ** [Leader]t   para buscar arquivos no diretório do projeto;
 ** [Leader]b   para buscar nos buffers, isto é, nos arquivos já abertos
 ** [Leader]tr  para forçar ao CommandT ler os arquivos recém criados.
 * "endwise":http://www.vim.org/scripts/script.php?script_id=2386 - Plugin para adição de fechamento de blocos em Ruby, como if, def e do com o end. Mais sobre "indentação de código no VIM":http://vim.wikia.com/wiki/VimTip83.
 * "NERD_Tree":http://www.vim.org/scripts/script.php?script_id=1658 - Este plugin cria uma visualização de diretórios estilo árvore, com funcionalidade de bookmark, ou seja, é possível criar um bookmark para um diretório para facilitar a abertura de projetos, por exemplo.
 ** Não tem um keymap para esse cara, então andei olhando na internet sobre sugestões:
 *** "[Leader]][":http://heykevinle.blogspot.com/2007/10/vim-nerdtree-plugin.html - Escolhi este, porque no MacBook o F2 precisa ser precionado com a tecla Fn.
 *** "F2":http://www.catonmat.net/blog/vim-plugins-nerdtree-vim
 *** "[Leader]d":http://sites.google.com/site/chrelad/notes-1/keymappingtotogglenerdtree
 * "vim-ruby":https://github.com/vim-ruby/vim-ruby - Plugin para syntax highlight, indentação inteligente para Ruby
 * "NERD_Commenter":http://www.vim.org/scripts/script.php?script_id=1218
 ** Estou usando "Command/" para alternar entre comentar/descomentar a linha atual.


h1. Temas de cores

Para mudar o tema, use o comando:
<pre><code>:colorscheme nome_do_tema</code></pre>

Observe que o Vim consegue completar o nome do tema, usando [TAB]

 * "railscast":http://www.vim.org/scripts/script.php?script_id=1995 - Inspirado no tema usado no Textmate do "Railscast":http://railscasts.com;
 * "railscasts2":http://www.vi-improved.org/color_sampler_pack;
 * "vividchalk":http://www.vim.org/scripts/script.php?script_id=1891 - Inspirado no tema Vibrant Ink, do TextMate.
