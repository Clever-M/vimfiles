h1. Vim

Venho lendo que não dá para depender de IDEs há algum tempo. São as mesmas pessoas que afirmam que é possível ser mais produtivo com um editor de textos poderoso.
Então, aproveitando minha atual entrada no mundo Ruby e o fato do Akita, que é quem eu leio sobre Ruby e usa VIM, resolvi me inspirar na idéia de "versionar meu diretório ~/.vim usando o Git":http://addisu.taddese.com/blog/using-github-and-pathogen-for-your-vim-config-files.

Para modificar as configurações entre no Vim e digite:
<pre>
:edit $MYVIMRC
</pre>

h2. Documentação

 * "Vim":http://vimdoc.sourceforge.net/htmldoc/usr_toc.html - sobre o editor Vim.
 * "Akita vimfiles, no Github":https://github.com/akitaonrails/vimfiles - O repositório do Akita com a configuração do vim dele.
 * "Atalhos Úteis":http://www.worldtimzone.com/res/vi.html.

h1. Modificações do VIM

As customizações feitas no meu .vimrc foram encontradas em http://jmcpherson.org/vimrc.html. Não estou usando todas, apenas as que me permitem definir o seguinte comportamento:

 * Sem compatibilidade com o VI;
 * Sem barra de ferramentas;
 * Exibir o número da linha da lateral esquerda do texto;
 * Exibir a linha e coluna atual, na inferior;
 * Identação automática, isto é, a indentação da linha próxima linha é a mesma da linha atual;
 * Tabulação de 2 caracteres;
 * Substituir os caracteres de tabulação pelo de espaço;
 * Exibir chaves correspondentes, isto é, quando fechar uma chave, mostrar qual a chave que está sendo fechada;
 * Buscar enquanto digita, isto é, ao ir para o modo de comando e digitar /, tudo que for digitado depois será destacado na próxima parte do texto onde aparecer, como na busca do Firefox;
 * Fonte Menlo de tamanho 13;


h1. Bundled Plugins

 * "Pathogen":https://github.com/tpope/vim-pathogen - "Como instalar os plugins no VIM encapsulados em uma pasta.":http://gustavodutra.com/post/409/pathogenvim-uma-alternativa-para-quem-utiliza-plugins-em-repositorios-remotos.
 * "Command-T":http://git.wincent.com/command-t.git/blob_plain/HEAD:/README.txt - Plugin que emula a abertura de arquivos do TextMate usando Command-T. No caso do VIM o atalho é [Leader]t, onde [Leader] costuma ser o \. Este plugin busca pelos arquivos no diretório corrente no Vim. Para mudar de diretório, use o cd no modo de comando. 
 * "endwise":http://www.vim.org/scripts/script.php?script_id=2386 - Plugin para adição de fechamento de blocos em Ruby, como if, def e do com o end. Mais sobre "indentação de código no VIM":http://vim.wikia.com/wiki/VimTip83.
 * "NERD_Tree":http://www.vim.org/scripts/script.php?script_id=1658 - Este plugin cria uma visualização de diretórios estilo árvore, com funcionalidade de bookmark, ou seja, é possível criar um bookmark para um diretório para facilitar a abertura de projetos, por exemplo.
 ** Não tem um keymap para esse cara, então andei olhando na internet sobre sugestões:
 *** "\][":http://heykevinle.blogspot.com/2007/10/vim-nerdtree-plugin.html - Escolhi este, porque no MacBook o F2 precisa ser precionado com a tecla Fn.
 *** "F2":http://www.catonmat.net/blog/vim-plugins-nerdtree-vim
 *** "\d":http://sites.google.com/site/chrelad/notes-1/keymappingtotogglenerdtree
